version: '2'

services:
  bitnami-kafka:
    container_name: 'bitnami-kafka'
    image: 'bitnami/kafka:3.6.0'
    ports:
      - '9092:9092'
      - '9094:9094' #for localhost access to docker
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@bitnami-kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://bitnami-kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
    networks:
      - inventography-net
  postgresql:
    container_name: 'postgresql'
    image: 'postgres:alpine3.18'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=12345
    networks:
      - inventography-net
  order-service:
    build:
      context: "."
      dockerfile: order-service/Dockerfile
    container_name: 'order-service'
    image: 'order-service:latest'
    depends_on:
      - bitnami-kafka
      - postgresql
    ports:
      - '8001:8001'
    networks:
      - inventography-net
  inventory-service:
    build:
      context: "."
      dockerfile: inventory-service/Dockerfile
    container_name: 'inventory-service'
    image: 'inventory-service:latest'
    depends_on:
      - bitnami-kafka
      - postgresql
    ports:
      - '8002:8002'
    networks:
      - inventography-net

networks:
  inventography-net:
